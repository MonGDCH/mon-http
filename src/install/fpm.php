<?php

/*
|--------------------------------------------------------------------------
| 加载composer
|--------------------------------------------------------------------------
| 加载composer, 处理类文件自动加载
|
*/
require_once __DIR__ . '/../vendor/autoload.php';



/*
|--------------------------------------------------------------------------
| 初始化应用
|--------------------------------------------------------------------------
| 初始化Gaia应用
|
*/
\gaia\App::initialize();



/*
|--------------------------------------------------------------------------
| 获取配置服务
|--------------------------------------------------------------------------
| 这里获取配置服务, 定义配置环境
|
*/
$config = \mon\env\Config::instance();



/*
|--------------------------------------------------------------------------
| 加载全局中间件
|--------------------------------------------------------------------------
| 这里加载全局中间件
|
*/
\mon\http\Middleware::instance()->load($config->get('http.middleware', []));



/*
|--------------------------------------------------------------------------
| 创建FPM应用
|--------------------------------------------------------------------------
| 这里创建FPM应用
|
*/
$app = new \mon\http\Fpm($config->get('app.debug', false));



/*
|--------------------------------------------------------------------------
| 是否启用FPM应用
|--------------------------------------------------------------------------
| 这里判断是否启用FPM应用，未启用则结束运行
|
*/
if (!$config->get('http.app.fpm.enable', false)) {
    $disabled = $app->getFallback();
    return $app->send($disabled());
}



/*
|--------------------------------------------------------------------------
| 自定义异常处理实支持
|--------------------------------------------------------------------------
| 这里自定义异常处理实支持
|
*/
$app->supportError($config->get('http.app.exception', \support\http\HttpErrorHandler::class));



/*
|--------------------------------------------------------------------------
| 注册session支持
|--------------------------------------------------------------------------
| 这里注册session支持
|
*/
$app->supportSession($config->get('http.session', []));



/*
|--------------------------------------------------------------------------
| 启动时
|--------------------------------------------------------------------------
| 这里注册应用启动时业务
|
*/
support\http\Bootstrap::start($app);



/*
|--------------------------------------------------------------------------
| 定义路由
|--------------------------------------------------------------------------
| 注册应用请求路由，存在路由缓存文件，则直接加载缓存文件
|
*/
$cache_route_file = $config->get('http.app.fpm.cache', '');
if ($cache_route_file && file_exists($cache_route_file)) {
    $data = require $cache_route_file;
    $app->route()->setData($data);
} else {
    support\http\Bootstrap::registerRoute($app->route());
}



/*
|--------------------------------------------------------------------------
| 运行程序
|--------------------------------------------------------------------------
| 运行程序
|
*/
$app->run();
